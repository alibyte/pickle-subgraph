type Jar @entity {
  id: ID!
  "Jar name"
  name: String!
  "Share token symbol"
  symbol: String!
  "Deposit token"
  token: Token!
  "Deposit token per share"
  ratio: BigInt!
  "Shares outstanding"
  balance: BigInt!
  "Deposit tokens outstanding"
  totalSupply: BigInt!
  "Time of jar snapshot"
  timestamp: BigInt!

  netDeposit: BigInt!
  grossDeposit: BigInt!
  grossWithdraw: BigInt!
}

type User @entity {
  id: ID!
  jarBalances: [UserJarBalance!]! @derivedFrom(field: "user")

  balance: BigInt!
  staked: BigInt!
  stakingRewards: BigInt!
}

type UserJarBalance @entity {
  id: ID!
  jar: Jar!
  user: User!

  netDeposit: BigInt!
  grossDeposit: BigInt!
  grossWithdraw: BigInt!
}

type RewardContract @entity {
  id: ID!
  currentRewards: BigInt!
  totalRewards: BigInt!
  stakedTokens: BigInt!
  stakingToken: Bytes!
  stakingTokenTotalSupply: BigInt!
  "Time of reward snapshot"
  timestamp: BigInt!
}

type Token @entity {
  id: ID!
  decimals: BigInt!
  name: String!
  symbol: String!
  totalSupply: BigInt!
}
